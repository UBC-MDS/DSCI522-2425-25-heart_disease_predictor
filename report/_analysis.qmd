## Classification Analysis

### Decision Tree: Cross-Validation Results

```{python}
#| label: tbl-dst_cv_results
#| tbl-cap: "Cross-validation results of Decision Tree Model"
from IPython.display import Markdown
from tabulate import tabulate
import pandas as pd
dst_cv_results = pd.read_csv("../results/tables/decision_tree/decision_tree_cv_results.csv")

if 'Unnamed: 0' in dst_cv_results.columns:
    dst_cv_results = dst_cv_results.rename(columns={'Unnamed: 0': ''})

Markdown(dst_cv_results.to_markdown(index = False))
```

![Confusion Matrix of Decision Tree Model](../results/tables/decision_tree/decision_tree_confusion_matrix.png){#fig-conf-m-dt}

### Decision Tree: Final Results

```{python}
#| label: tbl-dst_model_results
#| tbl-cap: "Final results of Decision Tree Model"
dst_model_results = pd.read_csv("../results/tables/decision_tree/classification_report.csv")

if 'Unnamed: 0' in dst_model_results.columns:
    dst_model_results = dst_model_results.rename(columns={'Unnamed: 0': ''})

Markdown(dst_model_results.to_markdown(index = False))
```

### Logistic Regression: Cross-Validation Results
```{python}
#| label: tbl-lg_cv_results
#| tbl-cap: "Cross-Validation results of Logistic Regression Model"
lg_cv_results = pd.read_csv("../results/tables/logistic_regression/logistic_regression_cv_results.csv")

if 'Unnamed: 0' in lg_cv_results.columns:
    lg_cv_results = lg_cv_results.rename(columns={'Unnamed: 0': ''})

Markdown(lg_cv_results.to_markdown(index = False))
```

![Confusion Matrix of Logistic Regression Model](../results/tables/logistic_regression/logistic_regression_confusion_matrix.png){#fig-conf-m-lg}

### Logistic Regression: Coefficients

![Coefficients of Logistic Regression Model](../results/tables/logistic_regression/logreg_coefficients.png){#fig-coef-lg}

### Logistic Regression: Final Results

```{python}
#| label: tbl-lg_model_results
#| tbl-cap: "Final results of Logistic Regression Model"

lg_model_results = pd.read_csv("../results/tables/logistic_regression/classification_report.csv")

if 'Unnamed: 0' in lg_model_results.columns:
    lg_model_results = lg_model_results.rename(columns={'Unnamed: 0': ''})

Markdown(lg_model_results.to_markdown(index = False))
```